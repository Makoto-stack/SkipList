Sun Nov 17 22:23:28 PST 2019
*** compiling with clang++ to create an executable called myprogram
clang version 3.8.1-24 (tags/RELEASE_381/final)
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
*** running clang-tidy using options from .clang-tidy
LLVM (http://llvm.org/):
  LLVM version 3.8.1
  
  Optimized build.
  Built Jun  2 2017 (13:11:29).
  Default target: x86_64-pc-linux-gnu
  Host CPU: ivybridge
4374 warnings generated.
8559 warnings generated.
/home/NETID/mqb2/ass4-skiplist-starter/main.cpp:19:5: warning: don't use else after return [readability-else-after-return]
  } else {
    ^
/home/NETID/mqb2/ass4-skiplist-starter/main.cpp:69:11: warning: invalid case style for variable 'i' [readability-identifier-naming]
        for (int i = 0; i < 10; ++i) {
                 ^
                 I      I         I
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:72:2: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        SNode* NodeToAddPtr = new SNode(Data);
        ^
        auto 
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:81:21: warning: Potential leak of memory pointed to by 'NodeToAddPtr' [clang-analyzer-cplusplus.NewDeleteLeaks]
        int CurrentLevel = 1;
                           ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:64:2: note: Loop condition is false. Execution continues on line 71
        while (CurPtr != nullptr) {
        ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:72:24: note: Memory is allocated
        SNode* NodeToAddPtr = new SNode(Data);
                              ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:74:27: note: Left side of '&&' is false
        while (CurPtr != nullptr && !Added) {
                                 ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:81:21: note: Potential leak of memory pointed to by 'NodeToAddPtr'
        int CurrentLevel = 1;
                           ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:84:3: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                SNode* NodeToAddPtr = new SNode(Data);
                ^
                auto 
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:96:3: warning: Potential leak of memory pointed to by 'NodeToAddPtr' [clang-analyzer-cplusplus.NewDeleteLeaks]
                CurrentLevel++;
                ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:64:2: note: Loop condition is true.  Entering loop body
        while (CurPtr != nullptr) {
        ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:65:3: note: Taking false branch
                if (CurPtr->Data == Data) {
                ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:64:2: note: Loop condition is false. Execution continues on line 71
        while (CurPtr != nullptr) {
        ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:74:9: note: Left side of '&&' is true
        while (CurPtr != nullptr && !Added) {
               ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:74:2: note: Loop condition is true.  Entering loop body
        while (CurPtr != nullptr && !Added) {
        ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:75:3: note: Taking true branch
                if (Data < CurPtr->Data) {
                ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:74:27: note: Left side of '&&' is false
        while (CurPtr != nullptr && !Added) {
                                 ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:82:9: note: Left side of '&&' is true
        while (alsoHigher() && CurrentLevel < Depth && Added) {
               ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:82:9: note: Left side of '&&' is true
        while (alsoHigher() && CurrentLevel < Depth && Added) {
               ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:82:2: note: Loop condition is true.  Entering loop body
        while (alsoHigher() && CurrentLevel < Depth && Added) {
        ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:84:25: note: Memory is allocated
                SNode* NodeToAddPtr = new SNode(Data);
                                      ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:86:28: note: Left side of '&&' is false
                while (CurPtr != nullptr && !SubAdded) {
                                         ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:96:3: note: Potential leak of memory pointed to by 'NodeToAddPtr'
                CurrentLevel++;
                ^
/home/NETID/mqb2/ass4-skiplist-starter/skiplist.cpp:149:3: warning: don't use else after return [readability-else-after-return]
                else {
                ^
Suppressed 8550 warnings (8550 in non-user code).
Use -header-filter=.* to display errors from all non-system headers.
*** running myprogram
Because of the random nature of SkipList, the skip list levels may not match
OK: Empty SkipList
OK: Added 10, 30, 5, 25,
OK: Empty SkipList of Depth=3
OK: SkipList of Depth=3 with 10, 30, 5, 25
OK: Contains 10
OK: Contains 30
OK: Does not contain 71
After adding 81
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 2147483647, 
Level: 2 -- -2147483648, 2147483647, 
Level: 1 -- -2147483648, 81, 2147483647, 
Level: 0 -- -2147483648, 81, 2147483647, 

After adding 28
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 2147483647, 
Level: 2 -- -2147483648, 28, 2147483647, 
Level: 1 -- -2147483648, 28, 81, 2147483647, 
Level: 0 -- -2147483648, 28, 81, 2147483647, 

After adding 1
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 2147483647, 
Level: 2 -- -2147483648, 28, 2147483647, 
Level: 1 -- -2147483648, 28, 81, 2147483647, 
Level: 0 -- -2147483648, 1, 28, 81, 2147483647, 

After adding 38
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 2147483647, 
Level: 2 -- -2147483648, 28, 2147483647, 
Level: 1 -- -2147483648, 28, 81, 2147483647, 
Level: 0 -- -2147483648, 1, 28, 38, 81, 2147483647, 

After adding 43
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 2147483647, 
Level: 2 -- -2147483648, 28, 2147483647, 
Level: 1 -- -2147483648, 28, 81, 2147483647, 
Level: 0 -- -2147483648, 1, 28, 38, 43, 81, 2147483647, 

After adding 41
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 2147483647, 
Level: 2 -- -2147483648, 28, 2147483647, 
Level: 1 -- -2147483648, 28, 81, 2147483647, 
Level: 0 -- -2147483648, 1, 28, 38, 41, 43, 81, 2147483647, 

After adding 15
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 2147483647, 
Level: 2 -- -2147483648, 28, 2147483647, 
Level: 1 -- -2147483648, 28, 81, 2147483647, 
Level: 0 -- -2147483648, 1, 15, 28, 38, 41, 43, 81, 2147483647, 

After adding 13
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 13, 2147483647, 
Level: 2 -- -2147483648, 13, 28, 2147483647, 
Level: 1 -- -2147483648, 13, 28, 81, 2147483647, 
Level: 0 -- -2147483648, 1, 13, 15, 28, 38, 41, 43, 81, 2147483647, 

After adding 46
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 13, 2147483647, 
Level: 2 -- -2147483648, 13, 28, 2147483647, 
Level: 1 -- -2147483648, 13, 28, 81, 2147483647, 
Level: 0 -- -2147483648, 1, 13, 15, 28, 38, 41, 43, 46, 81, 2147483647, 

After adding 77
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 13, 2147483647, 
Level: 2 -- -2147483648, 13, 28, 2147483647, 
Level: 1 -- -2147483648, 13, 28, 77, 81, 2147483647, 
Level: 0 -- -2147483648, 1, 13, 15, 28, 38, 41, 43, 46, 77, 81, 2147483647, 

OK: Removed 28
Passed: 8/8
*** running with valgrind
==1780== Memcheck, a memory error detector
==1780== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1780== Using Valgrind-3.12.0.SVN and LibVEX; rerun with -h for copyright info
==1780== Command: ./myprogram
==1780== 
Because of the random nature of SkipList, the skip list levels may not match
OK: Empty SkipList
OK: Added 10, 30, 5, 25,
OK: Empty SkipList of Depth=3
OK: SkipList of Depth=3 with 10, 30, 5, 25
OK: Contains 10
OK: Contains 30
OK: Does not contain 71
After adding 81
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 2147483647, 
Level: 2 -- -2147483648, 2147483647, 
Level: 1 -- -2147483648, 81, 2147483647, 
Level: 0 -- -2147483648, 81, 2147483647, 

After adding 28
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 2147483647, 
Level: 2 -- -2147483648, 28, 2147483647, 
Level: 1 -- -2147483648, 28, 81, 2147483647, 
Level: 0 -- -2147483648, 28, 81, 2147483647, 

After adding 1
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 2147483647, 
Level: 2 -- -2147483648, 28, 2147483647, 
Level: 1 -- -2147483648, 28, 81, 2147483647, 
Level: 0 -- -2147483648, 1, 28, 81, 2147483647, 

After adding 38
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 2147483647, 
Level: 2 -- -2147483648, 28, 2147483647, 
Level: 1 -- -2147483648, 28, 81, 2147483647, 
Level: 0 -- -2147483648, 1, 28, 38, 81, 2147483647, 

After adding 43
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 2147483647, 
Level: 2 -- -2147483648, 28, 2147483647, 
Level: 1 -- -2147483648, 28, 81, 2147483647, 
Level: 0 -- -2147483648, 1, 28, 38, 43, 81, 2147483647, 

After adding 41
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 2147483647, 
Level: 2 -- -2147483648, 28, 2147483647, 
Level: 1 -- -2147483648, 28, 81, 2147483647, 
Level: 0 -- -2147483648, 1, 28, 38, 41, 43, 81, 2147483647, 

After adding 15
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 2147483647, 
Level: 2 -- -2147483648, 28, 2147483647, 
Level: 1 -- -2147483648, 28, 81, 2147483647, 
Level: 0 -- -2147483648, 1, 15, 28, 38, 41, 43, 81, 2147483647, 

After adding 13
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 13, 2147483647, 
Level: 2 -- -2147483648, 13, 28, 2147483647, 
Level: 1 -- -2147483648, 13, 28, 81, 2147483647, 
Level: 0 -- -2147483648, 1, 13, 15, 28, 38, 41, 43, 81, 2147483647, 

After adding 46
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 13, 2147483647, 
Level: 2 -- -2147483648, 13, 28, 2147483647, 
Level: 1 -- -2147483648, 13, 28, 81, 2147483647, 
Level: 0 -- -2147483648, 1, 13, 15, 28, 38, 41, 43, 46, 81, 2147483647, 

After adding 77
Level: 4 -- -2147483648, 2147483647, 
Level: 3 -- -2147483648, 13, 2147483647, 
Level: 2 -- -2147483648, 13, 28, 2147483647, 
Level: 1 -- -2147483648, 13, 28, 77, 81, 2147483647, 
Level: 0 -- -2147483648, 1, 13, 15, 28, 38, 41, 43, 46, 77, 81, 2147483647, 

OK: Removed 28
Passed: 8/8
==1780== 
==1780== HEAP SUMMARY:
==1780==     in use at exit: 0 bytes in 0 blocks
==1780==   total heap usage: 83 allocs, 83 frees, 82,642 bytes allocated
==1780== 
==1780== All heap blocks were freed -- no leaks are possible
==1780== 
==1780== For counts of detected and suppressed errors, rerun with: -v
==1780== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
*** cleaning up, deleting myprogram
Sun Nov 17 22:23:34 PST 2019
